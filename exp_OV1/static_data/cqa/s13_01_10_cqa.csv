unroll info;unroll confidence level;unroll loop type;unroll factor;is main/unrolled;RecMII;RecMII (best case for DIV/SQRT);comp_str;comp_opts;nb paths;addr;can be analyzed;path ID;repetitions;extra_unroll_factor;loop length;fit in cache;assumed macro fusion;cycles L1;cycles L1 (best case for DIV/SQRT);cycles L1 if clean;cycles L1 (best case for DIV/SQRT) if clean;cycles L1 if FP arith vectorized;cycles L1 (best case for DIV/SQRT) if FP arith vectorized;cycles L1 if nomem vectorized;cycles L1 (best case for DIV/SQRT) if nomem vectorized;cycles L1 if fully vectorized;cycles L1 (best case for DIV/SQRT) if fully vectorized;cycles L1 if no deps;cycles L1 (best case for DIV/SQRT) if no deps;cycles L1 if hitting next bottleneck;cycles L1 (best case for DIV/SQRT) if hitting next bottleneck;cycles L1 if only FP;cycles L1 (best case for DIV/SQRT) if only FP;cycles L1 if only FP arith;cycles L1 (best case for DIV/SQRT) if only FP arith;bottlenecks;cycles instruction fetch;cycles predecoding;cycles instruction queue;cycles decoding;cycles micro-operation queue;cycles ROB-read;cycles front end;cycles dispatch;cycles P0;cycles P1;cycles P2;cycles P3;cycles P4;cycles P5;cycles P6;cycles P7;uops P0;uops P1;uops P2;uops P3;uops P4;uops P5;uops P6;uops P7;cycles div sqrt max;cycles div sqrt min;nb instructions;nb uops;nb pure loads;nb impl loads;nb stores;nb stack references;nb total FP operations;nb FP add-sub operations;nb FP mul operations;nb FP fma operations;nb FP div operations;nb FP rcp operations;nb FP sqrt operations;nb FP rsqrt operations;FP operations per cycle L1;bytes loaded or stored per cycle L1;bytes loaded or stored per cycle L1 (best case for DIV/SQRT);bytes prefetched;bytes loaded;bytes stored;bytes loaded or stored;bytes wasted;bytes loaded if fully vectorized;bytes loaded if nomem vectorized;bytes loaded if FP arith vectorized;bytes stored if fully vectorized;bytes stored if nomem vectorized;bytes stored if FP arith vectorized;bytes prefetched if fully vectorized;bytes prefetched if nomem vectorized;bytes prefetched if FP arith vectorized;packed ratio all;packed ratio load;packed ratio store;packed ratio mul;packed ratio add_sub;packed ratio other;packed ratio INT all;packed ratio INT load;packed ratio INT store;packed ratio INT mul;packed ratio INT add_sub;packed ratio INT other;packed ratio FP all;packed ratio FP load;packed ratio FP store;packed ratio FP mul;packed ratio FP add_sub;packed ratio FP other;vec eff ratio all;vec eff ratio load;vec eff ratio store;vec eff ratio mul;vec eff ratio add_sub;vec eff ratio other;vec eff ratio INT all;vec eff ratio INT load;vec eff ratio INT store;vec eff ratio INT mul;vec eff ratio INT add_sub;vec eff ratio INT other;vec eff ratio FP all;vec eff ratio FP load;vec eff ratio FP store;vec eff ratio FP mul;vec eff ratio FP add_sub;vec eff ratio FP other;stride_0;stride_1;stride_n;stride_unknown;stride_indirect;Nb_FLOP_add_sub;Nb_FLOP_div;Nb_FLOP_mul;Nb_FLOP_fma;Nb_FLOP_rcp;Nb_FLOP_sqrt;Nb_FLOP_rsqrt;Nb_8_bits_loads;Nb_8_bits_stores;Nb_16_bits_loads;Nb_16_bits_stores;Nb_32_bits_loads;Nb_32_bits_stores;Nb_64_bits_loads;Nb_64_bits_stores;Nb_128_bits_loads;Nb_128_bits_stores;Nb_256_bits_loads;Nb_256_bits_stores;Nb_512_bits_loads;Nb_512_bits_stores;Nb_MOVH/LPS/D_loads;Nb_MOVH/LPS/D_stores;used x86 registers;used mmx registers;used xmm registers;used ymm registers;used zmm registers;bytes moved registers;bytes moved GP registers data read;bytes moved GP registers data write;bytes moved GP registers addr read;bytes moved GP registers addr write;bytes moved SIMD registers read;bytes moved SIMD registers write;Nb_insn_ADD/SUBPD_XMM;Nb_insn_ADD/SUBPD_YMM;Nb_insn_ADD/SUBPD_ZMM;Nb_insn_ADD/SUBPS_XMM;Nb_insn_ADD/SUBPS_YMM;Nb_insn_ADD/SUBPS_ZMM;Nb_insn_ADD/SUBSD;Nb_insn_ADD/SUBSS;Nb_insn_DIVPD_XMM;Nb_insn_DIVPD_YMM;Nb_insn_DIVPD_ZMM;Nb_insn_DIVPS_XMM;Nb_insn_DIVPS_YMM;Nb_insn_DIVPS_ZMM;Nb_insn_DIVSD;Nb_insn_DIVSS;Nb_insn_FMAPD_XMM;Nb_insn_FMAPD_YMM;Nb_insn_FMAPD_ZMM;Nb_insn_FMAPS_XMM;Nb_insn_FMAPS_YMM;Nb_insn_FMAPS_ZMM;Nb_insn_FMASD;Nb_insn_FMASS;Nb_insn_MULPD_XMM;Nb_insn_MULPD_YMM;Nb_insn_MULPD_ZMM;Nb_insn_MULPS_XMM;Nb_insn_MULPS_YMM;Nb_insn_MULPS_ZMM;Nb_insn_MULSD;Nb_insn_MULSS;Nb_insn_SQRTPD_XMM;Nb_insn_SQRTPD_YMM;Nb_insn_SQRTPD_ZMM;Nb_insn_SQRTPS_XMM;Nb_insn_SQRTPS_YMM;Nb_insn_SQRTPS_ZMM;Nb_insn_SQRTSD;Nb_insn_SQRTSS;Nb_insn_RSQRTPD_XMM;Nb_insn_RSQRTPD_YMM;Nb_insn_RSQRTPD_ZMM;Nb_insn_RSQRTPS_XMM;Nb_insn_RSQRTPS_YMM;Nb_insn_RSQRTPS_ZMM;Nb_insn_RSQRTSD;Nb_insn_RSQRTSS;Nb_insn_RCPPD_XMM;Nb_insn_RCPPD_YMM;Nb_insn_RCPPD_ZMM;Nb_insn_RCPPS_XMM;Nb_insn_RCPPS_YMM;Nb_insn_RCPPS_ZMM;Nb_insn_RCPSD;Nb_insn_RCPSS;Nb_insn_SS2SD;Nb_insn_SD2SS;Nb_insn_PS2PD-XMM;Nb_insn_PS2PD-YMM;Nb_insn_PS2PD-ZMM;Nb_insn_PD2PS-XMM;Nb_insn_PD2PS-YMM;Nb_insn_PD2PS-ZMM;Nb_insn_INSERT/EXTRACT;Nb_insn_COMPRESS/EXPAND_XMM;Nb_insn_COMPRESS/EXPAND_YMM;Nb_insn_COMPRESS/EXPAND_ZMM;Nb_insn_MMX_to/from;Nb_insn_BLEND/MERGE_XMM;Nb_insn_BLEND/MERGE_YMM;Nb_insn_BLEND/MERGE_ZMM;Nb_insn_SHUFFLE/PERM_XMM;Nb_insn_SHUFFLE/PERM_YMM;Nb_insn_SHUFFLE/PERM_ZMM;Nb_insn_BROADCAST_XMM;Nb_insn_BROADCAST_YMM;Nb_insn_BROADCAST_ZMM;Nb_insn_GATHER/SCATTER_XMM;Nb_insn_GATHER/SCATTER_YMM;Nb_insn_GATHER/SCATTER_ZMM;Nb_insn_MASKMOV/MOV2M_XMM;Nb_insn_MASKMOV/MOV2M_YMM;Nb_insn_MASKMOV/MOV2M_ZMM;Nb_insn_Other_packing_XMM;Nb_insn_Other_packing_YMM;Nb_insn_Other_packing_ZMM;Nb INT arith insn: ADD/SUB-XMM;Nb INT arith insn: ADD/SUB-YMM;Nb INT arith insn: ADD/SUB-ZMM;Nb INT arith insn: CMP-XMM;Nb INT arith insn: CMP-YMM;Nb INT arith insn: CMP-ZMM;Nb INT arith insn: MUL-XMM;Nb INT arith insn: MUL-YMM;Nb INT arith insn: MUL-ZMM;Nb INT arith insn: FMA-XMM;Nb INT arith insn: FMA-YMM;Nb INT arith insn: FMA-ZMM;Nb INT arith insn: SAD-XMM;Nb INT arith insn: SAD-YMM;Nb INT arith insn: SAD-ZMM;Nb INT arith insn: OTHER-XMM;Nb INT arith insn: OTHER-YMM;Nb INT arith insn: OTHER-ZMM;Nb INT logic insn: TEST-XMM;Nb INT logic insn: TEST-YMM;Nb INT logic insn: TEST-ZMM;Nb INT logic insn: AND-XMM;Nb INT logic insn: AND-YMM;Nb INT logic insn: AND-ZMM;Nb INT logic insn: ANDN-XMM;Nb INT logic insn: ANDN-YMM;Nb INT logic insn: ANDN-ZMM;Nb INT logic insn: XOR-XMM;Nb INT logic insn: XOR-YMM;Nb INT logic insn: XOR-ZMM;Nb INT logic insn: OR-XMM;Nb INT logic insn: OR-YMM;Nb INT logic insn: OR-ZMM;Nb INT logic insn: SHIFT-XMM;Nb INT logic insn: SHIFT-YMM;Nb INT logic insn: SHIFT-ZMM;Nb INT other insn: XMM;Nb INT other insn: YMM;Nb INT other insn: ZMM;Nb scalar IOP: add-sub;Nb scalar IOP: cmp;Nb scalar IOP: mul;Nb scalar IOP: div;nb scalar INT operations;Nb SIMD IOP: add-sub;Nb SIMD IOP: cmp;Nb SIMD IOP: mul;Nb SIMD IOP: fma;Nb SIMD IOP;Nb scalar INT arith insn: ADD/SUB;Nb scalar INT arith insn: CMP;Nb scalar INT arith insn: MUL;Nb scalar INT arith insn: OTHER;Nb scalar INT logic insn: AND;Nb scalar INT logic insn: XOR;Nb scalar INT logic insn: OR;Nb scalar INT logic insn: SHIFT;nb scalar INT other insns;Nb loop control insns;ID;MAQAO Nb Path;
NA;NA;NA;NA;NA;0;0;NA;NA;4;1a86;true;1;1;NA;33;Yes (uop cache);true;2.5;2.5;2.5;2.5;2.5;2.5;1.1875;1.1875;0.3125;0.3125;NA;NA;1.5;1.5;2.5;2.5;2.5;2.5;micro-operation queue, P2, P3, ;NA;NA;NA;NA;2.5;NA;2.5;2.5;1.5;1.5;2.5;2.5;1;1.5;1.5;1;1.5;1.5;2.5;2.5;1;1.5;1.5;1;0;0;10;10;3;2;1;3;0;0;0;0;0;0;0;0;0.00, 0.00, ;9.6;9.6;0;20;4;24;0;16;12.5;20;4;0.44444444444444;4;0;0;0;0;0;0;NA;NA;0;0;0;0;NA;NA;0;NA;NA;NA;NA;NA;NA;12.5;12.5;12.5;NA;NA;12.5;12.5;12.5;12.5;NA;NA;12.5;NA;NA;NA;NA;NA;NA;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;5;1;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;72;20;16;40;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;2;0;0;0;0;0;2;0;0;0;0;0;0;0;0;2;10;4
NA;NA;NA;NA;NA;0;0;NA;NA;4;1a86;true;2;1;NA;50;Yes (uop cache);true;4;4;4;4;4;4;2.25;2.25;0.5;0.5;NA;NA;3.75;3.75;4;4;4;4;P2, P3, ;NA;NA;NA;NA;3.75;NA;3.75;4;2.25;2.25;4;4;1;2.25;2.25;1;2.25;2.25;4;4;1;2.25;2.25;1;0;0;15;15;5;3;1;3;0;0;0;0;0;0;0;0;0.00, 0.00, ;9;9;0;32;4;36;0;28;17.444444444444;32;4;0.44444444444444;4;0;0;0;0;0;0;NA;NA;0;0;0;0;NA;NA;0;NA;NA;NA;NA;NA;NA;12.5;12.5;12.5;NA;NA;12.5;12.5;12.5;12.5;NA;NA;12.5;NA;NA;NA;NA;NA;NA;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;8;1;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;116;32;28;64;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;3;0;0;0;0;0;3;0;0;0;0;0;0;0;0;3;10;4
NA;NA;NA;NA;NA;0;0;NA;NA;4;1a86;true;3;1;NA;249;Yes (uop cache);true;17.25;17.25;9.75;9.75;5.25;5.25;5.25;5.25;2.2196691176471;2.2196691176471;NA;NA;14;14;7.5;7.5;5.5;5.5;micro-operation queue, ;NA;NA;NA;NA;17.25;NA;17.25;14;9.5;9.5;14;14;3;9.5;9.5;3;9.5;9.5;14;14;3;9.5;9.5;3;3;3;68;69;25;3;3;8;1;0;0;0;1;0;0;0;0.06, 0.06, ;8.5797101449275;8.5797101449275;0;136;12;148;0;128;103.94444444444;104;12;1.4444444444444;1.5;0;0;0;12.5;0;0;NA;NA;28.571428571429;28.571428571429;0;0;NA;NA;50;0;0;0;NA;NA;0;18.75;14.0625;12.5;NA;NA;25;23.214285714286;12.5;12.5;NA;NA;31.25;15.277777777778;15.625;12.5;NA;NA;16.666666666667;1;0;0;2;0;0;1;0;0;0;0;0;0;0;0;0;22;3;6;0;0;0;0;0;0;0;0;0;5;0;2;0;0;840;100;96;408;192;100;60;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;2;0;0;6;0;2;0;8;0;0;0;0;0;6;0;2;0;0;0;0;0;0;21;10;4
NA;NA;NA;NA;NA;0;0;NA;NA;4;1a86;true;4;1;NA;145;Yes (uop cache);true;10.25;10.25;6.25;6.25;10.25;10.25;3.25;3.25;1.3453125;1.3453125;NA;NA;8.5;8.5;5;5;3.5;3.5;micro-operation queue, ;NA;NA;NA;NA;10.25;NA;10.25;8.5;5.75;5.75;8.5;8.5;2;5.75;5.75;2;5.75;5.75;8.5;8.5;2;5.75;5.75;2;0;0;40;41;14;3;2;7;0;0;0;0;0;0;0;0;0.00, 0.00, ;8.5853658536585;8.5853658536585;0;80;8;88;0;72;58.444444444444;80;8;0.94444444444444;8;0;0;0;18.181818181818;0;0;NA;NA;33.333333333333;33.333333333333;0;0;NA;NA;50;0;0;0;NA;NA;0;21.590909090909;15;12.5;NA;NA;27.083333333333;25;12.5;12.5;NA;NA;31.25;17.5;18.75;12.5;NA;NA;18.75;1;0;0;2;0;0;0;0;0;0;0;0;0;0;0;0;14;2;3;0;0;0;0;0;0;0;0;0;5;0;2;0;0;484;64;60;216;80;88;48;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;2;0;0;3;0;1;0;4;0;0;0;0;0;3;0;1;0;0;0;0;0;0;15;10;4
NA;NA;NA;NA;NA;0;0;NA;NA;4;1a86;true;AVG;1;NA;119.25;NA;NA;8.5;8.5;5.625;5.625;5.5;5.5;2.984375;2.984375;1.0943704044118;1.0943704044118;NA;NA;6.9375;6.9375;4.75;4.75;3.875;3.875;;NA;NA;NA;NA;8.4375;NA;8.4375;7.25;4.75;4.75;7.25;7.25;1.75;4.75;4.75;1.75;4.75;4.75;7.25;7.25;1.75;4.75;4.75;1.75;0.75;0.75;33.25;33.75;11.75;2.75;1.75;5.25;0.25;0;0;0;0.25;0;0;0;0.01, 0.01, ;8.9412689996465;8.9412689996465;0;67;7;NA;0;61;48.083333333333;59;7;0.81944444444444;4.375;0;0;0;7.6704545454545;0;0;NA;NA;15.47619047619;15.47619047619;0;0;NA;NA;25;0;0;0;NA;NA;0;16.335227272727;13.515625;12.5;NA;NA;19.270833333333;18.303571428571;12.5;12.5;NA;NA;21.875;16.388888888889;17.1875;12.5;NA;NA;17.708333333333;1;0;0;1;0;0;0.25;0;0;0;0;0;0;0;0;0;12.25;1.75;2.25;0;0;0;0;0;0;0;0;0;4;0;1;0;0;378;54;50;182;68;47;27;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.25;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.5;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;0;0;0;0;0;1;0;0;3.5;0;0.75;0;4.25;0;0;0;0;0;3.5;0;0.75;0;0;0;0;0;0;10.25;10;4
